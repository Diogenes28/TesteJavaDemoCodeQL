name: Code Scanning with CodeQL and Veracode

# üöÄ Este workflow roda automaticamente em 3 situa√ß√µes:
on:
  push:
    branches: [ "main" ]            # Sempre que algu√©m fizer push na branch main
  pull_request:
    branches: [ "main" ]            # Sempre que abrir um pull request para a main
  schedule:
    - cron: '37 0 * * 1'            # E tamb√©m toda segunda-feira √†s 00:37 UTC (agendado)

# üîí Permiss√µes b√°sicas para acessar o reposit√≥rio e subir alertas
permissions:
  contents: read
  security-events: write

jobs:

  # üö® JOB 1: An√°lise de seguran√ßa local com CodeQL (do GitHub)
  codeql-analysis:
    name: CodeQL Security Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]         # üü° Altere para a linguagem do seu projeto (ex: 'javascript', 'python', etc.)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # üîé JOB 2: Pipeline Scan do Veracode (an√°lise local + alertas no GitHub)
  veracode-pipeline-scan:
    name: Veracode Pipeline Scan
    runs-on: ubuntu-latest
    needs: codeql-analysis    # S√≥ roda depois do CodeQL terminar
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Zip source code
        run: zip -r veracode-scan-target.zip ./

      - name: Download Veracode Pipeline Scan
        run: |
          curl --silent --show-error --fail -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
          unzip -o pipeline-scan-LATEST.zip

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: 'temurin'

      - name: Run Veracode Scan
        run: |
          java -jar pipeline-scan.jar \
          --veracode_api_id "${{ secrets.VERACODE_API_ID }}" \
          --veracode_api_key "${{ secrets.VERACODE_API_KEY }}" \
          --fail_on_severity="Very High, High" \
          --file veracode-scan-target.zip
        continue-on-error: true  # N√£o quebra o workflow mesmo se falhar

      - name: Convert Veracode JSON to SARIF
        id: convert
        uses: veracode/veracode-pipeline-scan-results-to-sarif@ff08ae5b45d5384cb4679932f184c013d34da9be
        with:
          pipeline-results-json: results.json

      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: veracode-results.sarif

  # ‚òÅÔ∏è JOB 3: Upload do c√≥digo para a plataforma da Veracode (Analysis Center)
  veracode-upload-and-scan:
    name: Veracode Upload and Scan
    runs-on: ubuntu-latest
    needs: veracode-pipeline-scan    # S√≥ roda depois do Pipeline Scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Zip source code
        run: zip -r veracode-scan-target.zip ./

      - name: Run Veracode Upload and Scan
        uses: veracode/veracode-uploadandscan-action@0.2.6
        with:
          appname: "TesteJavaDemoCodeQL"                 # üü° Altere para o nome que voc√™ quer ver no Veracode
          createprofile: true                       # Cria o perfil da aplica√ß√£o se ainda n√£o existir
          filepath: "veracode-scan-target.zip"      # Caminho do arquivo ZIP com seu c√≥digo
          version: "GitHub Actions - ${{ github.run_id }}"   # Nome da vers√£o que aparece na plataforma
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
          deleteincompletescan: 0                # Cancela se o upload n√£o for completo
          scantimeout: 60                           # Espera at√© 15 minutos pelo resultado
